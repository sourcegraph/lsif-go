# <a name=""> <small>(new page,exported)</small></a>

# Index

- [Package testdata](#github.com-sourcegraph-lsif-go-internal-testdata)
- [Package secret](#internal-secret)
- [Package notests](#internal-shouldvisit-notests)
- [Package tests](#internal-shouldvisit-tests)
- [Package pkg](#internal-shouldvisit-tests_separate)
- [Package pkg_test](#internal-shouldvisit-tests_separate_test)

## <a name="github.com-sourcegraph-lsif-go-internal-testdata">Package testdata <small>(new page)</small> <small>searchKey="github.com/sourcegraph/lsif-go/internal/testdata"</small></a>

Package testdata 

testdata is a small package containing sample Go source code used for testing the indexing routines of github.com/sourcegraph/lsif-go. 

## Index

- [Constants](#github.com-sourcegraph-lsif-go-internal-testdata---const)
  - [const Const](#github.com-sourcegraph-lsif-go-internal-testdata---Const)
  - [const ConstBlock1](#github.com-sourcegraph-lsif-go-internal-testdata---ConstBlock1)
  - [const ConstBlock2](#github.com-sourcegraph-lsif-go-internal-testdata---ConstBlock2)
  - [const Score](#github.com-sourcegraph-lsif-go-internal-testdata---Score)
  - [const secretScore](#github.com-sourcegraph-lsif-go-internal-testdata---secretScore)
  - [const SomeString](#github.com-sourcegraph-lsif-go-internal-testdata---SomeString)
  - [const LongString](#github.com-sourcegraph-lsif-go-internal-testdata---LongString)
  - [const ConstMath](#github.com-sourcegraph-lsif-go-internal-testdata---ConstMath)
  - [const AliasedString](#github.com-sourcegraph-lsif-go-internal-testdata---AliasedString)
- [Variables](#github.com-sourcegraph-lsif-go-internal-testdata---var)
  - [var Var](#github.com-sourcegraph-lsif-go-internal-testdata---Var)
  - [var unexportedVar](#github.com-sourcegraph-lsif-go-internal-testdata---unexportedVar)
  - [var x](#github.com-sourcegraph-lsif-go-internal-testdata---x)
  - [var BigVar](#github.com-sourcegraph-lsif-go-internal-testdata---BigVar)
  - [var VarBlock1](#github.com-sourcegraph-lsif-go-internal-testdata---VarBlock1)
  - [var VarBlock2](#github.com-sourcegraph-lsif-go-internal-testdata---VarBlock2)
- [Types](#github.com-sourcegraph-lsif-go-internal-testdata---type)
  - [type Embedded struct](#github.com-sourcegraph-lsif-go-internal-testdata---Embedded)
  - [type Struct struct](#github.com-sourcegraph-lsif-go-internal-testdata---Struct)
    - [func (s *Struct) StructMethod()](#github.com-sourcegraph-lsif-go-internal-testdata---Struct.StructMethod)
    - [func (s *Struct) ImplementsInterface() string](#github.com-sourcegraph-lsif-go-internal-testdata---Struct.ImplementsInterface)
    - [func (s *Struct) MachineLearning(param1 float32,...](#github.com-sourcegraph-lsif-go-internal-testdata---Struct.MachineLearning)
  - [type Interface interface](#github.com-sourcegraph-lsif-go-internal-testdata---Interface)
    - [func NewInterface() Interface](#github.com-sourcegraph-lsif-go-internal-testdata---NewInterface)
  - [type X struct](#github.com-sourcegraph-lsif-go-internal-testdata---X)
  - [type Y struct](#github.com-sourcegraph-lsif-go-internal-testdata---Y)
  - [type Inner struct](#github.com-sourcegraph-lsif-go-internal-testdata---Inner)
  - [type Outer struct](#github.com-sourcegraph-lsif-go-internal-testdata---Outer)
  - [type TestInterface interface](#github.com-sourcegraph-lsif-go-internal-testdata---TestInterface)
  - [type TestStruct struct](#github.com-sourcegraph-lsif-go-internal-testdata---TestStruct)
    - [func (ts *TestStruct) Doer(ctx context.Context, data string) (score int, err error)](#github.com-sourcegraph-lsif-go-internal-testdata---TestStruct.Doer)
  - [type TestEmptyStruct struct{}](#github.com-sourcegraph-lsif-go-internal-testdata---TestEmptyStruct)
  - [type StringAlias string](#github.com-sourcegraph-lsif-go-internal-testdata---StringAlias)
  - [type StructTagRegression struct](#github.com-sourcegraph-lsif-go-internal-testdata---StructTagRegression)
  - [type TestEqualsStruct struct](#github.com-sourcegraph-lsif-go-internal-testdata---TestEqualsStruct)
  - [type ShellStruct struct](#github.com-sourcegraph-lsif-go-internal-testdata---ShellStruct)
  - [type InnerStruct struct{}](#github.com-sourcegraph-lsif-go-internal-testdata---InnerStruct)
  - [type ParallelizableFunc func(ctx context.Context) error](#github.com-sourcegraph-lsif-go-internal-testdata---ParallelizableFunc)
  - [type SecretBurger secret.Burger](#github.com-sourcegraph-lsif-go-internal-testdata---SecretBurger)
  - [type BadBurger struct](#github.com-sourcegraph-lsif-go-internal-testdata---BadBurger)
- [Functions](#github.com-sourcegraph-lsif-go-internal-testdata---func)
  - [func useOfCompositeStructs()](#github.com-sourcegraph-lsif-go-internal-testdata---useOfCompositeStructs)
  - [func Parallel(ctx context.Context, fns ...ParallelizableFunc) error](#github.com-sourcegraph-lsif-go-internal-testdata---Parallel)
  - [func Switch(interfaceValue interface{}) bool](#github.com-sourcegraph-lsif-go-internal-testdata---Switch)

### <a name="github.com-sourcegraph-lsif-go-internal-testdata---const">Constants</a>

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---Const">const Const <small>(exported)</small> <small>searchKey="testdata.Const"</small></a>

<details><summary>hover</summary>

> ```go
> const Const untyped int = 5
> ```
> 
> ---
> 
> Const is a constant equal to 5. It's the best constant I've ever written. ðŸ˜¹

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 4,
     "character": 6
    },
    "end": {
     "line": 4,
     "character": 11
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 4,
     "character": 6
    },
    "end": {
     "line": 4,
     "character": 11
    }
   }
  ]
 }
]
```

</details>

```Go
const Const = 5
```

Const is a constant equal to 5. It's the best constant I've ever written. ðŸ˜¹ 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---ConstBlock1">const ConstBlock1 <small>(exported)</small> <small>searchKey="testdata.ConstBlock1"</small></a>

<details><summary>hover</summary>

> ```go
> const ConstBlock1 untyped int = 1
> ```
> 
> ---
> 
> ConstBlock1 is a constant in a block.

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 9,
     "character": 1
    },
    "end": {
     "line": 9,
     "character": 12
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 9,
     "character": 1
    },
    "end": {
     "line": 9,
     "character": 12
    }
   }
  ]
 }
]
```

</details>

```Go
const ConstBlock1 = 1
```

Docs for the const block itself. 

ConstBlock1 is a constant in a block. 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---ConstBlock2">const ConstBlock2 <small>(exported)</small> <small>searchKey="testdata.ConstBlock2"</small></a>

<details><summary>hover</summary>

> ```go
> const ConstBlock2 untyped int = 2
> ```
> 
> ---
> 
> ConstBlock2 is a constant in a block.

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 12,
     "character": 1
    },
    "end": {
     "line": 12,
     "character": 12
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 12,
     "character": 1
    },
    "end": {
     "line": 12,
     "character": 12
    }
   }
  ]
 }
]
```

</details>

```Go
const ConstBlock2 = 2
```

Docs for the const block itself. 

ConstBlock2 is a constant in a block. 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---Score">const Score <small>(exported)</small> <small>searchKey="testdata.Score"</small></a>

<details><summary>hover</summary>

> ```go
> const Score uint64 = 42
> ```
> 
> ---
> 
> Score is just a hardcoded number.

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 39,
     "character": 6
    },
    "end": {
     "line": 39,
     "character": 11
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 39,
     "character": 6
    },
    "end": {
     "line": 39,
     "character": 11
    }
   }
  ]
 }
]
```

</details>

```Go
const Score = uint64(42)
```

Score is just a hardcoded number. 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---secretScore">const secretScore <small>searchKey="testdata.secretScore"</small></a>

<details><summary>hover</summary>

> ```go
> const secretScore uint64 = 43
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 40,
     "character": 6
    },
    "end": {
     "line": 40,
     "character": 17
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 40,
     "character": 6
    },
    "end": {
     "line": 40,
     "character": 17
    }
   }
  ]
 }
]
```

</details>

```Go
const secretScore = secret.SecretScore
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---SomeString">const SomeString <small>(exported)</small> <small>searchKey="testdata.SomeString"</small></a>

<details><summary>hover</summary>

> ```go
> const SomeString untyped string = "foobar"
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 42,
     "character": 6
    },
    "end": {
     "line": 42,
     "character": 16
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 42,
     "character": 6
    },
    "end": {
     "line": 42,
     "character": 16
    }
   }
  ]
 }
]
```

</details>

```Go
const SomeString = "foobar"
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---LongString">const LongString <small>(exported)</small> <small>searchKey="testdata.LongString"</small></a>

<details><summary>hover</summary>

> ```go
> const LongString untyped string = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tincidu...
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 43,
     "character": 6
    },
    "end": {
     "line": 43,
     "character": 16
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 43,
     "character": 6
    },
    "end": {
     "line": 43,
     "character": 16
    }
   }
  ]
 }
]
```

</details>

```Go
const LongString = ...
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---ConstMath">const ConstMath <small>(exported)</small> <small>searchKey="testdata.ConstMath"</small></a>

<details><summary>hover</summary>

> ```go
> const ConstMath untyped int = 26
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 44,
     "character": 6
    },
    "end": {
     "line": 44,
     "character": 15
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 44,
     "character": 6
    },
    "end": {
     "line": 44,
     "character": 15
    }
   }
  ]
 }
]
```

</details>

```Go
const ConstMath = 1 + (2+3)*5
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---AliasedString">const AliasedString <small>(exported)</small> <small>searchKey="testdata.AliasedString"</small></a>

<details><summary>hover</summary>

> ```go
> const AliasedString StringAlias = "foobar"
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 48,
     "character": 6
    },
    "end": {
     "line": 48,
     "character": 19
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 48,
     "character": 6
    },
    "end": {
     "line": 48,
     "character": 19
    }
   }
  ]
 }
]
```

</details>

```Go
const AliasedString StringAlias = "foobar"
```

### <a name="github.com-sourcegraph-lsif-go-internal-testdata---var">Variables</a>

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---Var">var Var <small>(exported)</small> <small>searchKey="testdata.Var"</small></a>

<details><summary>hover</summary>

> ```go
> var Var Interface
> ```
> 
> ---
> 
> Var is a variable interface.

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 16,
     "character": 4
    },
    "end": {
     "line": 16,
     "character": 7
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 16,
     "character": 4
    },
    "end": {
     "line": 16,
     "character": 7
    }
   }
  ]
 }
]
```

</details>

```Go
var Var Interface = &Struct{Field: "bar!"}
```

Var is a variable interface. 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---unexportedVar">var unexportedVar <small>searchKey="testdata.unexportedVar"</small></a>

<details><summary>hover</summary>

> ```go
> var unexportedVar Interface
> ```
> 
> ---
> 
> unexportedVar is an unexported variable interface.

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 19,
     "character": 4
    },
    "end": {
     "line": 19,
     "character": 17
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 19,
     "character": 4
    },
    "end": {
     "line": 19,
     "character": 17
    }
   }
  ]
 }
]
```

</details>

```Go
var unexportedVar Interface = &Struct{Field: "bar!"}
```

unexportedVar is an unexported variable interface. 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---x">var x <small>searchKey="testdata.x"</small></a>

<details><summary>hover</summary>

> ```go
> var x error
> ```
> 
> ---
> 
> x has a builtin error type

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 22,
     "character": 4
    },
    "end": {
     "line": 22,
     "character": 5
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 22,
     "character": 4
    },
    "end": {
     "line": 22,
     "character": 5
    }
   }
  ]
 }
]
```

</details>

```Go
var x error
```

x has a builtin error type 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---BigVar">var BigVar <small>(exported)</small> <small>searchKey="testdata.BigVar"</small></a>

<details><summary>hover</summary>

> ```go
> var BigVar Interface
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 24,
     "character": 4
    },
    "end": {
     "line": 24,
     "character": 10
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 24,
     "character": 4
    },
    "end": {
     "line": 24,
     "character": 10
    }
   }
  ]
 }
]
```

</details>

```Go
var BigVar Interface = ...
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---VarBlock1">var VarBlock1 <small>(exported)</small> <small>searchKey="testdata.VarBlock1"</small></a>

<details><summary>hover</summary>

> ```go
> var VarBlock1 string
> ```
> 
> ---
> 
> This has some docs

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 46,
     "character": 1
    },
    "end": {
     "line": 46,
     "character": 10
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 46,
     "character": 1
    },
    "end": {
     "line": 46,
     "character": 10
    }
   }
  ]
 }
]
```

</details>

```Go
var VarBlock1 = "if you're reading this"
```

What are docs, really? I can't say for sure, I don't write any. But look, a CAT! 

```
      |\      _,,,---,,_
ZZZzz /,`.-'`'    -.  ;-;;,_
     |,4-  ) )-,_. ,\ (  `'-'
    '---''(_/--'  `-'\_)

```
It's sleeping! Some people write that as `sleeping` but Markdown isn't allowed in Go docstrings, right? right?! 

This has some docs 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---VarBlock2">var VarBlock2 <small>(exported)</small> <small>searchKey="testdata.VarBlock2"</small></a>

<details><summary>hover</summary>

> ```go
> var VarBlock2 string
> ```
> 
> ---
> 
> What are docs, really? I can't say for sure, I don't write any. But look, a CAT! 
> 
> ```
>       |\      _,,,---,,_
> ZZZzz /,`.-'`'    -.  ;-;;,_
>      |,4-  ) )-,_. ,\ (  `'-'
>     '---''(_/--'  `-'\_)
> 
> ```
> It's sleeping! Some people write that as `sleeping` but Markdown isn't allowed in Go docstrings, right? right?!

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 48,
     "character": 1
    },
    "end": {
     "line": 48,
     "character": 10
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 48,
     "character": 1
    },
    "end": {
     "line": 48,
     "character": 10
    }
   }
  ]
 }
]
```

</details>

```Go
var VarBlock2 = "hi"
```

What are docs, really? I can't say for sure, I don't write any. But look, a CAT! 

```
      |\      _,,,---,,_
ZZZzz /,`.-'`'    -.  ;-;;,_
     |,4-  ) )-,_. ,\ (  `'-'
    '---''(_/--'  `-'\_)

```
It's sleeping! Some people write that as `sleeping` but Markdown isn't allowed in Go docstrings, right? right?! 

### <a name="github.com-sourcegraph-lsif-go-internal-testdata---type">Types</a>

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---Embedded">type Embedded struct <small>(exported)</small> <small>searchKey="testdata.Embedded"</small></a>

<details><summary>hover</summary>

> ```go
> type Embedded struct
> ```
> 
> ---
> 
> Embedded is a struct, to be embedded in another struct. 
> 
> 
> 
> ---
> 
> ```go
> struct {
>     EmbeddedField string
>     Field string
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 52,
     "character": 5
    },
    "end": {
     "line": 52,
     "character": 13
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 52,
     "character": 5
    },
    "end": {
     "line": 52,
     "character": 13
    }
   }
  ]
 }
]
```

</details>

```Go
type Embedded struct {
	// EmbeddedField has some docs!
	EmbeddedField string
	Field         string // conflicts with parent "Field"
}
```

Embedded is a struct, to be embedded in another struct. 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---Struct">type Struct struct <small>(exported)</small> <small>searchKey="testdata.Struct"</small></a>

<details><summary>hover</summary>

> ```go
> type Struct struct
> ```
> 
> ---
> 
> ```go
> struct {
>     *Embedded
>     Field string
>     Anonymous struct {
>         FieldA int
>         FieldB int
>         FieldC int
>     }
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 58,
     "character": 5
    },
    "end": {
     "line": 58,
     "character": 11
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 58,
     "character": 5
    },
    "end": {
     "line": 58,
     "character": 11
    }
   }
  ]
 }
]
```

</details>

```Go
type Struct struct {
	*Embedded
	Field     string
	Anonymous struct {
		FieldA int
		FieldB int
		FieldC int
	}
}
```

##### <a name="github.com-sourcegraph-lsif-go-internal-testdata---Struct.StructMethod">func (s *Struct) StructMethod() <small>(exported)</small> <small>searchKey="testdata.Struct.StructMethod"</small></a>

<details><summary>hover</summary>

> ```go
> func (*Struct).StructMethod()
> ```
> 
> ---
> 
> StructMethod has some docs!

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 69,
     "character": 17
    },
    "end": {
     "line": 69,
     "character": 29
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 69,
     "character": 17
    },
    "end": {
     "line": 69,
     "character": 29
    }
   }
  ]
 }
]
```

</details>

```Go
func (s *Struct) StructMethod()
```

StructMethod has some docs! 

##### <a name="github.com-sourcegraph-lsif-go-internal-testdata---Struct.ImplementsInterface">func (s *Struct) ImplementsInterface() string <small>(exported)</small> <small>searchKey="testdata.Struct.ImplementsInterface"</small></a>

<details><summary>hover</summary>

> ```go
> func (*Struct).ImplementsInterface() string
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 71,
     "character": 17
    },
    "end": {
     "line": 71,
     "character": 36
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 71,
     "character": 17
    },
    "end": {
     "line": 71,
     "character": 36
    }
   }
  ]
 }
]
```

</details>

```Go
func (s *Struct) ImplementsInterface() string
```

##### <a name="github.com-sourcegraph-lsif-go-internal-testdata---Struct.MachineLearning">func (s *Struct) MachineLearning(param1 float32,... <small>(exported)</small> <small>searchKey="testdata.Struct.MachineLearning"</small></a>

<details><summary>hover</summary>

> ```go
> func (*Struct).MachineLearning(param1 float32, hyperparam2 float32, hyperparam3 float32) float32
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 73,
     "character": 17
    },
    "end": {
     "line": 73,
     "character": 32
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 73,
     "character": 17
    },
    "end": {
     "line": 73,
     "character": 32
    }
   }
  ]
 }
]
```

</details>

```Go
func (s *Struct) MachineLearning(
	param1 float32,

	hyperparam2 float32,
	hyperparam3 float32,
) float32
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---Interface">type Interface interface <small>(exported)</small> <small>searchKey="testdata.Interface"</small></a>

<details><summary>hover</summary>

> ```go
> type Interface interface
> ```
> 
> ---
> 
> Interface has docs too 
> 
> 
> 
> ---
> 
> ```go
> interface {
>     ImplementsInterface() string
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 109,
     "character": 5
    },
    "end": {
     "line": 109,
     "character": 14
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 109,
     "character": 5
    },
    "end": {
     "line": 109,
     "character": 14
    }
   }
  ]
 }
]
```

</details>

```Go
type Interface interface {
	ImplementsInterface() string
}
```

Interface has docs too 

##### <a name="github.com-sourcegraph-lsif-go-internal-testdata---NewInterface">func NewInterface() Interface <small>(exported)</small> <small>searchKey="testdata.NewInterface"</small></a>

<details><summary>hover</summary>

> ```go
> func NewInterface() Interface
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 113,
     "character": 5
    },
    "end": {
     "line": 113,
     "character": 17
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 113,
     "character": 5
    },
    "end": {
     "line": 113,
     "character": 17
    }
   }
  ]
 }
]
```

</details>

```Go
func NewInterface() Interface
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---X">type X struct <small>(exported)</small> <small>searchKey="testdata.X"</small></a>

<details><summary>hover</summary>

> ```go
> type X struct
> ```
> 
> ---
> 
> And confusing 
> 
> 
> 
> ---
> 
> ```go
> struct {
>     bar string
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 133,
     "character": 1
    },
    "end": {
     "line": 133,
     "character": 2
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 133,
     "character": 1
    },
    "end": {
     "line": 133,
     "character": 2
    }
   }
  ]
 }
]
```

</details>

```Go
type X struct {
	bar string
}
```

Go can be fun 

And confusing 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---Y">type Y struct <small>(exported)</small> <small>searchKey="testdata.Y"</small></a>

<details><summary>hover</summary>

> ```go
> type Y struct
> ```
> 
> ---
> 
> Go can be fun 
> 
> 
> 
> ---
> 
> ```go
> struct {
>     baz invalid type
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 137,
     "character": 1
    },
    "end": {
     "line": 137,
     "character": 2
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/child_symbols.go",
  "Ranges": [
   {
    "start": {
     "line": 137,
     "character": 1
    },
    "end": {
     "line": 137,
     "character": 2
    }
   }
  ]
 }
]
```

</details>

```Go
type Y struct {
	baz float
}
```

Go can be fun 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---Inner">type Inner struct <small>(exported)</small> <small>searchKey="testdata.Inner"</small></a>

<details><summary>hover</summary>

> ```go
> type Inner struct
> ```
> 
> ---
> 
> ```go
> struct {
>     X int
>     Y int
>     Z int
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/composite.go",
  "Ranges": [
   {
    "start": {
     "line": 4,
     "character": 5
    },
    "end": {
     "line": 4,
     "character": 10
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/composite.go",
  "Ranges": [
   {
    "start": {
     "line": 4,
     "character": 5
    },
    "end": {
     "line": 4,
     "character": 10
    }
   }
  ]
 }
]
```

</details>

```Go
type Inner struct {
	X int
	Y int
	Z int
}
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---Outer">type Outer struct <small>(exported)</small> <small>searchKey="testdata.Outer"</small></a>

<details><summary>hover</summary>

> ```go
> type Outer struct
> ```
> 
> ---
> 
> ```go
> struct {
>     Inner
>     W int
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/composite.go",
  "Ranges": [
   {
    "start": {
     "line": 10,
     "character": 5
    },
    "end": {
     "line": 10,
     "character": 10
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/composite.go",
  "Ranges": [
   {
    "start": {
     "line": 10,
     "character": 5
    },
    "end": {
     "line": 10,
     "character": 10
    }
   }
  ]
 }
]
```

</details>

```Go
type Outer struct {
	Inner
	W int
}
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---TestInterface">type TestInterface interface <small>(exported)</small> <small>searchKey="testdata.TestInterface"</small></a>

<details><summary>hover</summary>

> ```go
> type TestInterface interface
> ```
> 
> ---
> 
> TestInterface is an interface used for testing. 
> 
> 
> 
> ---
> 
> ```go
> interface {
>     Do(ctx Context, data string) (score int, _ error)
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 9,
     "character": 5
    },
    "end": {
     "line": 9,
     "character": 18
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 9,
     "character": 5
    },
    "end": {
     "line": 9,
     "character": 18
    }
   }
  ]
 }
]
```

</details>

```Go
type TestInterface interface {
	// Do does a test thing.
	Do(ctx context.Context, data string) (score int, _ error)
}
```

TestInterface is an interface used for testing. 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---TestStruct">type TestStruct struct <small>(exported)</small> <small>searchKey="testdata.TestStruct"</small></a>

<details><summary>hover</summary>

> ```go
> type TestStruct struct
> ```
> 
> ---
> 
> TestStruct is a struct used for testing. 
> 
> 
> 
> ---
> 
> ```go
> struct {
>     SimpleA int
>     SimpleB int
>     SimpleC int
>     FieldWithTag string "json:\"tag\""
>     FieldWithAnonymousType struct {
>         NestedA string
>         NestedB string
>         NestedC string
>     }
>     EmptyStructField struct{}
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 16,
     "character": 1
    },
    "end": {
     "line": 16,
     "character": 11
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 16,
     "character": 1
    },
    "end": {
     "line": 16,
     "character": 11
    }
   }
  ]
 }
]
```

</details>

```Go
type TestStruct struct {
	// SimpleA docs
	SimpleA int
	// SimpleB docs
	SimpleB int
	// SimpleC docs
	SimpleC int

	FieldWithTag           string `json:"tag"`
	FieldWithAnonymousType struct {
		NestedA string
		NestedB string
		// NestedC docs
		NestedC string
	}

	EmptyStructField struct{}
}
```

TestStruct is a struct used for testing. 

##### <a name="github.com-sourcegraph-lsif-go-internal-testdata---TestStruct.Doer">func (ts *TestStruct) Doer(ctx context.Context, data string) (score int, err error) <small>(exported)</small> <small>searchKey="testdata.TestStruct.Doer"</small></a>

<details><summary>hover</summary>

> ```go
> func (*TestStruct).Doer(ctx Context, data string) (score int, err error)
> ```
> 
> ---
> 
> Doer is similar to the test interface (but not the same).

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 51,
     "character": 22
    },
    "end": {
     "line": 51,
     "character": 26
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 51,
     "character": 22
    },
    "end": {
     "line": 51,
     "character": 26
    }
   }
  ]
 }
]
```

</details>

```Go
func (ts *TestStruct) Doer(ctx context.Context, data string) (score int, err error)
```

Doer is similar to the test interface (but not the same). 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---TestEmptyStruct">type TestEmptyStruct struct{} <small>(exported)</small> <small>searchKey="testdata.TestEmptyStruct"</small></a>

<details><summary>hover</summary>

> ```go
> type TestEmptyStruct struct
> ```
> 
> ---
> 
> ```go
> struct{}
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 35,
     "character": 1
    },
    "end": {
     "line": 35,
     "character": 16
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 35,
     "character": 1
    },
    "end": {
     "line": 35,
     "character": 16
    }
   }
  ]
 }
]
```

</details>

```Go
type TestEmptyStruct struct{}
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---StringAlias">type StringAlias string <small>(exported)</small> <small>searchKey="testdata.StringAlias"</small></a>

<details><summary>hover</summary>

> ```go
> string
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 46,
     "character": 5
    },
    "end": {
     "line": 46,
     "character": 16
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 46,
     "character": 5
    },
    "end": {
     "line": 46,
     "character": 16
    }
   }
  ]
 }
]
```

</details>

```Go
type StringAlias string
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---StructTagRegression">type StructTagRegression struct <small>(exported)</small> <small>searchKey="testdata.StructTagRegression"</small></a>

<details><summary>hover</summary>

> ```go
> type StructTagRegression struct
> ```
> 
> ---
> 
> StructTagRegression is a struct that caused panic in the wild. Added here to support a regression test. 
> 
> See [https://github.com/tal-tech/go-zero/blob/11dd3d75ecceaa3f5772024fb3f26dec1ada8e9c/core/mapping/unmarshaler_test.go#L2272](https://github.com/tal-tech/go-zero/blob/11dd3d75ecceaa3f5772024fb3f26dec1ada8e9c/core/mapping/unmarshaler_test.go#L2272). 
> 
> 
> 
> ---
> 
> ```go
> struct {
>     Value int "key:\",range=[:}\""
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 59,
     "character": 5
    },
    "end": {
     "line": 59,
     "character": 24
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 59,
     "character": 5
    },
    "end": {
     "line": 59,
     "character": 24
    }
   }
  ]
 }
]
```

</details>

```Go
type StructTagRegression struct {
	Value int `key:",range=[:}"`
}
```

StructTagRegression is a struct that caused panic in the wild. Added here to support a regression test. 

See [https://github.com/tal-tech/go-zero/blob/11dd3d75ecceaa3f5772024fb3f26dec1ada8e9c/core/mapping/unmarshaler_test.go#L2272](https://github.com/tal-tech/go-zero/blob/11dd3d75ecceaa3f5772024fb3f26dec1ada8e9c/core/mapping/unmarshaler_test.go#L2272). 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---TestEqualsStruct">type TestEqualsStruct struct <small>(exported)</small> <small>searchKey="testdata.TestEqualsStruct"</small></a>

<details><summary>hover</summary>

> ```go
> type TestEqualsStruct = struct
> ```
> 
> ---
> 
> ```go
> struct {
>     Value int
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 63,
     "character": 5
    },
    "end": {
     "line": 63,
     "character": 21
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 63,
     "character": 5
    },
    "end": {
     "line": 63,
     "character": 21
    }
   }
  ]
 }
]
```

</details>

```Go
type TestEqualsStruct = struct {
	Value int
}
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---ShellStruct">type ShellStruct struct <small>(exported)</small> <small>searchKey="testdata.ShellStruct"</small></a>

<details><summary>hover</summary>

> ```go
> type ShellStruct struct
> ```
> 
> ---
> 
> ```go
> struct {
>     InnerStruct
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 67,
     "character": 5
    },
    "end": {
     "line": 67,
     "character": 16
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 67,
     "character": 5
    },
    "end": {
     "line": 67,
     "character": 16
    }
   }
  ]
 }
]
```

</details>

```Go
type ShellStruct struct {
	// Ensure this field comes before the definition
	// so that we grab the correct one in our unit
	// tests.
	InnerStruct
}
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---InnerStruct">type InnerStruct struct{} <small>(exported)</small> <small>searchKey="testdata.InnerStruct"</small></a>

<details><summary>hover</summary>

> ```go
> type InnerStruct struct
> ```
> 
> ---
> 
> ```go
> struct{}
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 74,
     "character": 5
    },
    "end": {
     "line": 74,
     "character": 16
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 74,
     "character": 5
    },
    "end": {
     "line": 74,
     "character": 16
    }
   }
  ]
 }
]
```

</details>

```Go
type InnerStruct struct{}
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---ParallelizableFunc">type ParallelizableFunc func(ctx context.Context) error <small>(exported)</small> <small>searchKey="testdata.ParallelizableFunc"</small></a>

<details><summary>hover</summary>

> ParallelizableFunc is a function that can be called concurrently with other instances of this function type. 
> 
> 
> 
> ---
> 
> ```go
> func(ctx Context) error
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/parallel.go",
  "Ranges": [
   {
    "start": {
     "line": 9,
     "character": 5
    },
    "end": {
     "line": 9,
     "character": 23
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/parallel.go",
  "Ranges": [
   {
    "start": {
     "line": 9,
     "character": 5
    },
    "end": {
     "line": 9,
     "character": 23
    }
   }
  ]
 }
]
```

</details>

```Go
type ParallelizableFunc func(ctx context.Context) error
```

ParallelizableFunc is a function that can be called concurrently with other instances of this function type. 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---SecretBurger">type SecretBurger secret.Burger <small>(exported)</small> <small>searchKey="testdata.SecretBurger"</small></a>

<details><summary>hover</summary>

> ```go
> type SecretBurger = secret.Burger
> ```
> 
> ---
> 
> Type aliased doc 
> 
> 
> 
> ---
> 
> ```go
> struct {
>     Field int
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/typealias.go",
  "Ranges": [
   {
    "start": {
     "line": 7,
     "character": 5
    },
    "end": {
     "line": 7,
     "character": 17
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/typealias.go",
  "Ranges": [
   {
    "start": {
     "line": 7,
     "character": 5
    },
    "end": {
     "line": 7,
     "character": 17
    }
   }
  ]
 }
]
```

</details>

```Go
type SecretBurger = secret.Burger
```

Type aliased doc 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---BadBurger">type BadBurger struct <small>(exported)</small> <small>searchKey="testdata.BadBurger"</small></a>

<details><summary>hover</summary>

> ```go
> type BadBurger = struct
> ```
> 
> ---
> 
> ```go
> struct {
>     Field string
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/typealias.go",
  "Ranges": [
   {
    "start": {
     "line": 9,
     "character": 5
    },
    "end": {
     "line": 9,
     "character": 14
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/typealias.go",
  "Ranges": [
   {
    "start": {
     "line": 9,
     "character": 5
    },
    "end": {
     "line": 9,
     "character": 14
    }
   }
  ]
 }
]
```

</details>

```Go
type BadBurger = struct {
	Field string
}
```

### <a name="github.com-sourcegraph-lsif-go-internal-testdata---func">Functions</a>

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---useOfCompositeStructs">func useOfCompositeStructs() <small>searchKey="testdata.useOfCompositeStructs"</small></a>

<details><summary>hover</summary>

> ```go
> func useOfCompositeStructs()
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/composite.go",
  "Ranges": [
   {
    "start": {
     "line": 15,
     "character": 5
    },
    "end": {
     "line": 15,
     "character": 26
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/composite.go",
  "Ranges": [
   {
    "start": {
     "line": 15,
     "character": 5
    },
    "end": {
     "line": 15,
     "character": 26
    }
   }
  ]
 }
]
```

</details>

```Go
func useOfCompositeStructs()
```

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---Parallel">func Parallel(ctx context.Context, fns ...ParallelizableFunc) error <small>(exported)</small> <small>searchKey="testdata.Parallel"</small></a>

<details><summary>hover</summary>

> ```go
> func Parallel(ctx Context, fns ...ParallelizableFunc) error
> ```
> 
> ---
> 
> Parallel invokes each of the given parallelizable functions in their own goroutines and returns the first error to occur. This method will block until all goroutines have returned.

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/parallel.go",
  "Ranges": [
   {
    "start": {
     "line": 13,
     "character": 5
    },
    "end": {
     "line": 13,
     "character": 13
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/parallel.go",
  "Ranges": [
   {
    "start": {
     "line": 13,
     "character": 5
    },
    "end": {
     "line": 13,
     "character": 13
    }
   }
  ]
 }
]
```

</details>

```Go
func Parallel(ctx context.Context, fns ...ParallelizableFunc) error
```

Parallel invokes each of the given parallelizable functions in their own goroutines and returns the first error to occur. This method will block until all goroutines have returned. 

#### <a name="github.com-sourcegraph-lsif-go-internal-testdata---Switch">func Switch(interfaceValue interface{}) bool <small>(exported)</small> <small>searchKey="testdata.Switch"</small></a>

<details><summary>hover</summary>

> ```go
> func Switch(interfaceValue interface{}) bool
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/typeswitch.go",
  "Ranges": [
   {
    "start": {
     "line": 2,
     "character": 5
    },
    "end": {
     "line": 2,
     "character": 11
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/typeswitch.go",
  "Ranges": [
   {
    "start": {
     "line": 2,
     "character": 5
    },
    "end": {
     "line": 2,
     "character": 11
    }
   }
  ]
 }
]
```

</details>

```Go
func Switch(interfaceValue interface{}) bool
```

## <a name="internal-secret">Package secret <small>(new page)</small> <small>searchKey="internal/secret"</small></a>

<details><summary>hover</summary>

> ```go
> package "github.com/sourcegraph/lsif-go/internal/testdata/internal/secret"
> ```
> 
> ---
> 
> secret is a package that holds secrets.

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 5,
     "character": 2
    },
    "end": {
     "line": 5,
     "character": 66
    }
   }
  ]
 },
 {
  "Document": "/typealias.go",
  "Ranges": [
   {
    "start": {
     "line": 3,
     "character": 2
    },
    "end": {
     "line": 3,
     "character": 66
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/data.go",
  "Ranges": [
   {
    "start": {
     "line": 5,
     "character": 2
    },
    "end": {
     "line": 5,
     "character": 66
    }
   }
  ]
 },
 {
  "Document": "/typealias.go",
  "Ranges": [
   {
    "start": {
     "line": 3,
     "character": 2
    },
    "end": {
     "line": 3,
     "character": 66
    }
   }
  ]
 }
]
```

</details>

secret is a package that holds secrets. 

## Index

- [Constants](#internal-secret---const)
  - [const SecretScore](#internal-secret---SecretScore)
- [Types](#internal-secret---type)
  - [type Burger struct](#internal-secret---Burger)

### <a name="internal-secret---const">Constants</a>

#### <a name="internal-secret---SecretScore">const SecretScore <small>(exported)</small> <small>searchKey="secret.SecretScore"</small></a>

<details><summary>hover</summary>

> ```go
> const SecretScore uint64 = 43
> ```
> 
> ---
> 
> SecretScore is like score but _secret_.

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/internal/secret/secret.go",
  "Ranges": [
   {
    "start": {
     "line": 3,
     "character": 6
    },
    "end": {
     "line": 3,
     "character": 17
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/internal/secret/secret.go",
  "Ranges": [
   {
    "start": {
     "line": 3,
     "character": 6
    },
    "end": {
     "line": 3,
     "character": 17
    }
   }
  ]
 }
]
```

</details>

```Go
const SecretScore = uint64(43)
```

SecretScore is like score but _secret_. 

### <a name="internal-secret---type">Types</a>

#### <a name="internal-secret---Burger">type Burger struct <small>(exported)</small> <small>searchKey="secret.Burger"</small></a>

<details><summary>hover</summary>

> ```go
> type Burger struct
> ```
> 
> ---
> 
> Original doc 
> 
> 
> 
> ---
> 
> ```go
> struct {
>     Field int
> }
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/internal/secret/secret.go",
  "Ranges": [
   {
    "start": {
     "line": 6,
     "character": 5
    },
    "end": {
     "line": 6,
     "character": 11
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/internal/secret/secret.go",
  "Ranges": [
   {
    "start": {
     "line": 6,
     "character": 5
    },
    "end": {
     "line": 6,
     "character": 11
    }
   }
  ]
 }
]
```

</details>

```Go
type Burger struct {
	Field int
}
```

Original doc 

## <a name="internal-shouldvisit-notests">Package notests <small>(new page)</small> <small>searchKey="internal/shouldvisit/notests"</small></a>

This package has no tests. 

## Index

- [Functions](#internal-shouldvisit-notests---func)
  - [func foo() bool](#internal-shouldvisit-notests---foo)

### <a name="internal-shouldvisit-notests---func">Functions</a>

#### <a name="internal-shouldvisit-notests---foo">func foo() bool <small>searchKey="notests.foo"</small></a>

<details><summary>hover</summary>

> ```go
> func foo() bool
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/internal/shouldvisit/notests/notests.go",
  "Ranges": [
   {
    "start": {
     "line": 3,
     "character": 5
    },
    "end": {
     "line": 3,
     "character": 8
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/internal/shouldvisit/notests/notests.go",
  "Ranges": [
   {
    "start": {
     "line": 3,
     "character": 5
    },
    "end": {
     "line": 3,
     "character": 8
    }
   }
  ]
 }
]
```

</details>

```Go
func foo() bool
```

## <a name="internal-shouldvisit-tests">Package tests <small>(new page)</small> <small>searchKey="internal/shouldvisit/tests"</small></a>

This package has tests. 

## Index

- [Functions](#internal-shouldvisit-tests---func)
  - [func foo() bool](#internal-shouldvisit-tests---foo)
  - [func TestFoo(t *testing.T)](#internal-shouldvisit-tests---TestFoo)

### <a name="internal-shouldvisit-tests---func">Functions</a>

#### <a name="internal-shouldvisit-tests---foo">func foo() bool <small>searchKey="tests.foo"</small></a>

<details><summary>hover</summary>

> ```go
> func foo() bool
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/internal/shouldvisit/tests/tests.go",
  "Ranges": [
   {
    "start": {
     "line": 3,
     "character": 5
    },
    "end": {
     "line": 3,
     "character": 8
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/internal/shouldvisit/tests/tests.go",
  "Ranges": [
   {
    "start": {
     "line": 3,
     "character": 5
    },
    "end": {
     "line": 3,
     "character": 8
    }
   }
  ]
 }
]
```

</details>

```Go
func foo() bool
```

#### <a name="internal-shouldvisit-tests---TestFoo">func TestFoo(t *testing.T) <small>searchKey="tests.TestFoo"</small></a>

<details><summary>hover</summary>

> ```go
> func TestFoo(t *T)
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/internal/shouldvisit/tests/tests_test.go",
  "Ranges": [
   {
    "start": {
     "line": 4,
     "character": 5
    },
    "end": {
     "line": 4,
     "character": 12
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/internal/shouldvisit/tests/tests_test.go",
  "Ranges": [
   {
    "start": {
     "line": 4,
     "character": 5
    },
    "end": {
     "line": 4,
     "character": 12
    }
   }
  ]
 }
]
```

</details>

```Go
func TestFoo(t *testing.T)
```

## <a name="internal-shouldvisit-tests_separate">Package pkg <small>(new page)</small> <small>searchKey="internal/shouldvisit/tests_separate"</small></a>

This package has tests, but in a separate _test package. 

## Index

- [Functions](#internal-shouldvisit-tests_separate---func)
  - [func foo() bool](#internal-shouldvisit-tests_separate---foo)

### <a name="internal-shouldvisit-tests_separate---func">Functions</a>

#### <a name="internal-shouldvisit-tests_separate---foo">func foo() bool <small>searchKey="pkg.foo"</small></a>

<details><summary>hover</summary>

> ```go
> func foo() bool
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/internal/shouldvisit/tests_separate/pkg.go",
  "Ranges": [
   {
    "start": {
     "line": 3,
     "character": 5
    },
    "end": {
     "line": 3,
     "character": 8
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/internal/shouldvisit/tests_separate/pkg.go",
  "Ranges": [
   {
    "start": {
     "line": 3,
     "character": 5
    },
    "end": {
     "line": 3,
     "character": 8
    }
   }
  ]
 }
]
```

</details>

```Go
func foo() bool
```

## <a name="internal-shouldvisit-tests_separate_test">Package pkg_test <small>(new page)</small> <small>searchKey="internal/shouldvisit/tests_separate_test"</small></a>

## Index

- [Functions](#internal-shouldvisit-tests_separate_test---func)
  - [func TestFoo(t *testing.T)](#internal-shouldvisit-tests_separate_test---TestFoo)

### <a name="internal-shouldvisit-tests_separate_test---func">Functions</a>

#### <a name="internal-shouldvisit-tests_separate_test---TestFoo">func TestFoo(t *testing.T) <small>searchKey="pkg_test.TestFoo"</small></a>

<details><summary>hover</summary>

> ```go
> func TestFoo(t *T)
> ```

</details>

<details><summary>definitions</summary>

```json
[
 {
  "Document": "/internal/shouldvisit/tests_separate/pkg_test.go",
  "Ranges": [
   {
    "start": {
     "line": 4,
     "character": 5
    },
    "end": {
     "line": 4,
     "character": 12
    }
   }
  ]
 }
]
```

</details>

<details><summary>references</summary>

```json
[
 {
  "Document": "/internal/shouldvisit/tests_separate/pkg_test.go",
  "Ranges": [
   {
    "start": {
     "line": 4,
     "character": 5
    },
    "end": {
     "line": 4,
     "character": 12
    }
   }
  ]
 }
]
```

</details>

```Go
func TestFoo(t *testing.T)
```

